/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define MEH LC(LS(LALT))
#define HYPER LS(LC(LG(LALT)))

#define LCTL LEFT_CONTROL
#define LSFT LEFT_SHIFT

&sl {
    release-after-ms = <2000>;
};

&key_repeat {
    usage-pages = <HID_USAGE_KEY HID_USAGE_CONSUMER>;
};

&lt {
    flavor = "hold-preferred";
};

/ {
    macros {
        i_email: insert_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings = <&kp S &kp A &kp H &kp A &kp N &kp A &kp T &kp A &kp N &kp K &kp A &kp L &kp A &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "I_EMAIL";
        };

        i_qqh: insert_quackquackhonk {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings = <&kp Q &kp U &kp A &kp C &kp K &kp Q &kp U &kp A &kp C &kp K &kp H &kp O &kp N &kp K>;
            label = "I_GITHUB";
        };
    };
    // Shift + Backspace for Delete (mod-morph)
    behaviors {
        bksp_del: bksp_del {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT)>;
        };
        sp_und: space_underscore {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp UNDERSCORE>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };
        // homerow mods
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
                    
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&key_repeat    &kp Q       &kp W      &kp F      &kp P       &kp B       &kp J      &kp L       &kp U      &kp Y      &kp SEMI   &bksp_del
&mt LCTL ESC   &hm LSFT A  &hm LGUI R &hm LALT S &hm LCTL T  &kp G       &kp M      &hm LCTL N  &hm LALT E &hm LGUI I &hm LSFT O &kp SINGLE_QUOTE
&kp TAB        &kp X       &kp C      &kp D      &kp V       &kp Z       &kp K      &kp H       &kp COMMA  &kp DOT    &kp SLASH  &kp ENTER
&sl 3          &kp LCTRL   &kp LALT   &kp LGUI   &lt 1 LBKT  &kp LSHFT   &sp_und    &lt 2 RBKT  &kp MEH    &kp HYPER  &kp RCTRL  &sl 4
            >;
        };

        NUM {
            label = "Numbers and symbols";
            bindings = <
&kp F24    &kp EXCLAMATION  &kp AT     &kp HASH       &kp DOLLAR      &kp LBKT  &kp RBKT  &kp N1  &kp N2  &kp N3  &kp EQUAL     &trans
&kp TILDE  &kp PERCENT      &kp CARET  &kp AMPERSAND  &kp UNDERSCORE  &kp LPAR  &kp RPAR  &kp N4  &kp N5  &kp N6  &kp ASTERISK  &kp FSLH
&kp GRAVE  &trans           &trans     &kp PIPE       &kp BSLH        &kp LBRC  &kp RBRC  &kp N7  &kp N8  &kp N9  &kp MINUS     &kp PLUS
&trans     &trans           &trans     &trans         &trans          &trans    &trans    &kp N0  &trans  &trans  &trans        &trans
            >;
        };

        NAV {
            label = "navigation";
            bindings = <
&kp CAPS &kp F1  &kp F2   &kp F3   &kp F4    &kp PRINTSCREEN  &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &trans             &trans
&trans   &kp F5  &kp F6   &kp F7   &kp F8    &trans           &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp LG(BACKSLASH)  &trans
&trans   &kp F9  &kp F10  &kp F11  &kp F12   &trans           &kp LG(LBKT)  &kp LA(LBKT)  &kp LA(RBKT)  &kp LG(RBKT)  &trans             &trans
&trans   &trans  &trans   &trans   &trans    &trans           &trans        &trans        &trans        &trans        &trans             &trans
            >;
        };

        // Media Layer
        EXTRA {
            bindings = <
&trans  &kp F13  &kp F14  &kp F15  &kp F16  &trans  &trans      &kp C_PLAY_PAUSE   &trans           &trans      &trans  &trans
&trans  &kp F17  &kp F18  &kp F19  &kp F20  &trans  &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &trans  &trans
&trans  &kp F21  &kp F22  &kp F23  &trans   &trans  &trans      &kp C_MUTE         &trans           &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans             &trans           &trans      &trans  &trans
            >;
        };

        // Macro Layer
        MACROS {
            bindings = <
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &i_qqh    &i_email  &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
            >;
        };
    };
};
